{"ast":null,"code":"export const expensesStats = itemList => {\n  let incomes = 0;\n  let expenses = 0;\n  let total = 0;\n  if (itemList.length === 0) {\n    return [0, 0];\n  }\n  itemList.forEach(element => {\n    if (element.money.income) {\n      incomes += element.money.amount;\n    } else {\n      expenses += element.money.amount;\n    }\n  });\n  total = Math.abs(incomes) + Math.abs(expenses);\n  let incomePercentage = Math.round(incomes * 100 / total);\n  let expencePercentage = Math.round(expenses * 100 / total);\n  return [incomes, expenses];\n};","map":{"version":3,"names":["expensesStats","itemList","incomes","expenses","total","length","forEach","element","money","income","amount","Math","abs","incomePercentage","round","expencePercentage"],"sources":["/var/www/Node/training-react/expenses/src/utils/expensesStats.js"],"sourcesContent":["export const expensesStats = (itemList) => {\n    let incomes =0;\n    let  expenses=0;\n     let   total=0;\n     if(itemList.length ===0)   {\n        return [0,0]\n     }\nitemList.forEach(element => {\n    if (element.money.income) {\n        incomes +=element.money.amount\n    }else{\n        expenses+=element.money.amount\n    }\n});\ntotal = Math.abs(incomes)+Math.abs(expenses);\nlet incomePercentage = Math.round((incomes*100)/total)\nlet expencePercentage = Math.round((expenses*100)/total)\nreturn [incomes, expenses]\n}"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,QAAQ,IAAK;EACvC,IAAIC,OAAO,GAAE,CAAC;EACd,IAAKC,QAAQ,GAAC,CAAC;EACd,IAAMC,KAAK,GAAC,CAAC;EACb,IAAGH,QAAQ,CAACI,MAAM,KAAI,CAAC,EAAI;IACxB,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC;EACf;EACLJ,QAAQ,CAACK,OAAO,CAACC,OAAO,IAAI;IACxB,IAAIA,OAAO,CAACC,KAAK,CAACC,MAAM,EAAE;MACtBP,OAAO,IAAGK,OAAO,CAACC,KAAK,CAACE,MAAM;IAClC,CAAC,MAAI;MACDP,QAAQ,IAAEI,OAAO,CAACC,KAAK,CAACE,MAAM;IAClC;EACJ,CAAC,CAAC;EACFN,KAAK,GAAGO,IAAI,CAACC,GAAG,CAACV,OAAO,CAAC,GAACS,IAAI,CAACC,GAAG,CAACT,QAAQ,CAAC;EAC5C,IAAIU,gBAAgB,GAAGF,IAAI,CAACG,KAAK,CAAEZ,OAAO,GAAC,GAAG,GAAEE,KAAK,CAAC;EACtD,IAAIW,iBAAiB,GAAGJ,IAAI,CAACG,KAAK,CAAEX,QAAQ,GAAC,GAAG,GAAEC,KAAK,CAAC;EACxD,OAAO,CAACF,OAAO,EAAEC,QAAQ,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}